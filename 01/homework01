#include <iostream>
#include <cstdlib>
#include <cmath>
#include "numbers.dat"

int search (int soughtFor);
int primeCount (int start, int end);
int isPrime(const int pr);

int main(int argc, char* argv[]){
  int* range = new int [argc];
  int result;
  int start;
  int end;

  if(argc >= 2)
    {
      for (int i = 1; i < argc; ++i)
        {
        range[i] = std::atoi(argv[i]);
        }
  if ((argc - 1)%2 == 0)
      for (int i = 1; i < argc; i++) 
      { 
        start = search ((range [i]));
        end = search (range[++i]);
        if (start == -1 || end == -1)
        return -1;
        result = primeCount(start, end);
        std::cout<<result<<std::endl;
      } else
          return -1;
        return 0;
    } else 
          return -1;
  delete [] range;
}

int search (int soughtFor) {
  int beg = 0;
  int end = Size;
  int middle;
	
  while (beg <= end)
    {
      middle = beg + (end - beg)/2;
      if (soughtFor < Data[middle])
        end = middle - 1;
      else if (soughtFor > Data[middle])	
        beg =  middle + 1;
      else
        return middle;
	  }
  return -1;
}

int primeCount (int start, int end){
  int counter = 0;
  for (int i = start; i <= end; i++)
        if (isPrime(Data[i]))
                counter++;
  return counter;	
}

int isPrime(const int pr){
  if (pr == 1)
        return 0;
  for(int i = 2; i <= sqrt(pr); i++)
    if (pr % i == 0)
      return 0;	
  return 1;	
}
